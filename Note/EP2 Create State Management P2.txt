üî¥ Selector ‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å state ‡πÑ‡∏õ‡πÉ‡∏´‡πâ compoment ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
    üü† Method ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á Selector
        üîµ Method ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á Selector
        private createSelector<T>(
            selector:(state:AppState)=>T // ‡∏£‡∏±‡∏ö functon state > ‡∏°‡∏µ parameter ‡πÄ‡∏õ‡πá‡∏ô state ‡∏ó‡∏µ‡∏°‡∏µ type ‡πÄ‡∏õ‡πá‡∏ô AppState
        ):Observable<T>{ //‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÉ‡∏´‡πâ Selector return ‡πÄ‡∏õ‡πá‡∏ô Observable
            return this.state.pipe(
            map(selector), //map ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
            distinctUntilChanged(), //‡∏ñ‡πâ‡∏≤ state ‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ã‡πâ‡∏≥
            shareReplay(1) //‡πÉ‡∏´‡πâ component ‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏Å‡∏≤‡∏£ subscribe ‡πÑ‡∏î‡πâ‡∏Ñ‡πà‡∏≤ state ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ
            )
        }
    üü† ‡∏™‡∏£‡πâ‡∏≤‡∏á selector
        üîµ ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å state ‡∏°‡∏≤‡πÉ‡∏ä‡πâ
        limit$ = this.createSelector(state=>state.limit) // ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤ limit ‡∏à‡∏≤‡∏Å state
        offset$ = this.createSelector(state=>state.offset) // // ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤ offset ‡∏à‡∏≤‡∏Å state
    üü† ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å state ‡∏ó‡∏µ‡πà‡∏î‡∏∂‡∏á‡∏°‡∏≤‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ selector
        app.compoment.html
            <div>Limit
                <button (click)="increaseLimit(10)">+</button>
                {{store.limit$ | async}} <!--‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ observable ‡∏ï‡πâ‡∏≠‡∏á subScribe ‡∏Å‡πà‡∏≠‡∏ô-->
                <button (click)="decreaseLimit(10)">-</button>
            </div>
            <br>
            <div>Offset
                <button (click)="increaseOffset(10)">+</button>
                {{store.offset$ | async}} <!--‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ observable ‡∏ï‡πâ‡∏≠‡∏á subScribe ‡∏Å‡πà‡∏≠‡∏ô-->
                <button (click)="decreaseLimit(10)">-</button>
            </div>